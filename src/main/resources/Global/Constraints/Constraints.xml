<?xml version="1.0" encoding="UTF-8"?>
<ConformanceContext UUID="389e0acf-69a6-46b1-9834-7581ee13a60f" xsi:noNamespaceSchemaLocation="./ConformanceContext.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <MetaData>
        <Description>Conformance context for ADT_A01</Description>
        <Authors>
            <Author FirstName="Olivier" LastName="MARIE-ROSE"/>
        </Authors>
    </MetaData>
    <Predicates>
        <Datatype>
            <ByID ID="CWE_OBX">
                <!-- CWE.6 -->
                <Predicate Target="6[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If OBX-5.4 (alternate identifier) is valued.</Description>
                    <Condition>
                        <Presence Path="4[1]"/>
                    </Condition>
                </Predicate>
            </ByID>
        </Datatype>
        <Segment>
            <ByID ID="PID_A03_A04_A08">
                <!-- PID.29 -->
                <Predicate Target="29[1]" TrueUsage="R" FalseUsage="RE" ID="1">
                    <Description>If PV1-36 (Discharge Disposition) is valued with any of the following: '20', '40', '41', '42'</Description>
                    <Condition>
                        <AND>
                            <Presence Path="36[1]"/>
                            <StringList Path="36[1]" CSV="20,40,41,42"/>
                        </AND>
                    </Condition>
                </Predicate>
                <!-- PID.30 -->
                <Predicate Target="30[1]" TrueUsage="R" FalseUsage="RE" ID="1">
                    <Description>If PV1-36 (Discharge Disposition) is valued with any of the following: '20', '40', '41', '42'</Description>
                    <Condition>
                        <AND>
                            <Presence Path="36[1]"/>
                            <StringList Path="36[1]" CSV="20,40,41,42"/>
                        </AND>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="PR1">
                <!-- PR1.3 -->
                <Predicate Target="3[1].3[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If PR1-3.1 (the identifier) is provided then PR1-3.3 is valued.</Description>
                    <Condition>
                        <Presence Path="3[1].1[1]"/>
                    </Condition>
                </Predicate>
            </ByID>
            <ByID ID="OBX">
                <!-- OBX.5 -->
                <!--             TODO  OBX.5 doesn't always has components! - Nico -->
                <!--                 <Predicate Target="5[1].1[1]" TrueUsage="R" FalseUsage="O"> -->
                <!--                     <Description>If OBX-3=SS002. (SS002^TREATING FACILITY LOCATION^PHINQUESTION)</Description> -->
                <!--                     <Condition> -->
                <!--                         <FORALL> -->
                <!--                             <PlainText Path="2[1].1[1]" Text="XAD" IgnoreCase	="true"/> -->
                <!--                             <Presence Path="5[1]"/> -->
                <!--                             <PlainText Path="5[1].1[1]" Text="SS002" IgnoreCase="true"/> -->
                <!--                             <PlainText Path="5[1].2[1]" Text="TREATING FACILITY LOCATION" IgnoreCase="true"/> -->
                <!--                             <PlainText Path="5[1].3[1]" Text="PHINQUESTION" IgnoreCase="true"/> -->
                <!--                         </FORALL> -->
                <!--                     </Condition> -->
                <!--                 </Predicate> -->
                <!-- OBX.6 -->
                <Predicate Target="6[1]" TrueUsage="R" FalseUsage="X">
                    <Description>If OBX.2 (Value Type) is valued 'NM'</Description>
                    <Condition>
                        <AND>
                            <Presence Path="2[1]"/>
                            <PlainText Path="2[1]" Text="NM" IgnoreCase="false"/>
                        </AND>
                    </Condition>
                </Predicate>
            </ByID>
            
        </Segment>
        <Group>
            
        </Group>
    </Predicates>
    <Constraints>
        <Datatype>
            
        </Datatype>
        <Segment>
            <ByName Name="MSH">
                <!-- MSH.1 -->
                <Constraint ID="SS-043">
                    <Description>MSH-1 (Field Separator) SHALL be literal '|' (ASCII 124).</Description>
                    <Assertion>
                        <AND>
                            <Presence Path="1[1]"/>
                            <PlainText Path="1[1]" Text="|" IgnoreCase="false"/>
                        </AND>
                    </Assertion>
                </Constraint>
                <!-- MSH.2 -->
                <Constraint ID="SS-044">
                    <Description>MSH-2 (Encoding Characters) SHALL be literal value '^~\&amp;' (ASCII 94, 126, 92, and 38 respectively).</Description>
                    <Assertion>
                        <AND>
                            <Presence Path="2[1]"/>
                            <PlainText Path="2[1]" Text="^~\&amp;" IgnoreCase="false"/>
                        </AND>
                    </Assertion>
                </Constraint>
                <!-- MSH.7 -->
                <Constraint ID="SS-013">
                    <Description>MSH-7 (Date/Time of Message) SHALL be expressed with a minimum precision of the nearest minute, and be represented in the following format: 'YYYYMMDDHHMM[SS[.S[S[S[S]]]]] [+/- ZZZZ]'</Description>
                    <Assertion>
                        <Format Path="7[1]" Regex="([0-9]{12}*)"/>
                    </Assertion>
                </Constraint>
                <!-- MSH.9 -->
                <Constraint ID="SS-XX">
                    <Description>9.1 in Message type; 9.2 in Event type; 9.3 in message structure</Description>
                    <Assertion>
                        <FORALL>
                            <Presence Path="9[1].1[1]"/>
                            <Presence Path="9[1].2[1]"/>
                            <Presence Path="9[1].3[1]"/>
                            <ValueSet Path="9[1].1[1]" ValueSetID="PHVS_MessageType_SyndromicSurveillance" BindingStrength="R" BindingLocation="1"/>
                            <ValueSet Path="9[1].2[1]" ValueSetID="PHVS_EventType_SyndromicSurveillance" BindingStrength="R" BindingLocation="1"/>
                            <ValueSet Path="9[1].3[1]" ValueSetID="PHVS_MessageStructure_SyndromicSurveillance" BindingStrength="R" BindingLocation="1"/>
                        </FORALL>
                    </Assertion>
                </Constraint>
                <!-- MSH.11 -->
                <Constraint ID="SS-015">
                    <Description>MSH-11 (Processing ID) SHALL have a value in the set of literal values: "P" for Production, "D" for Debug or "T" for Training.</Description>
                    <Assertion>
                        <StringList Path="11[1]" CSV="P,T,D"/>
                    </Assertion>
                </Constraint>
                <!-- MSH.12 -->
                <Constraint ID="SS-016">
                    <Description>MSH-12 (Version ID) SHALL have a value '2.5.1'</Description>
                    <Assertion>
                        <PlainText Path="12[1]" Text="2.5.1" IgnoreCase="false"/>
                    </Assertion>
                </Constraint>
                <!-- MSH.21 -->
                <Constraint ID="SS-017">
                    <Description> An instance of MSH.21 (Message Profile Identifier) SHALL contain the constant value: PH_SS-Ack^SS Sender^2.16.840.1.114222.4.10.3^ISO or PH_SS-Ack^SS Receiver^2.16.840.1.114222.4.10.3^ISO PH_SS-NoAck^SS Sender^2.16.840.1.114222.4.10.3^ISO or PH_SS-NoAck^SS Receiver^2.16.840.1.114222.4.10.3^ISO or PH_SS-Batch^SS Sender^2.16.840.1.114222.4.10.3^ISO or PH_SS-Batch^SS Receiver^2.16.840.1.114222.4.10.3^ISO </Description>
                    <Assertion>
                        <EXIST>
                            <FORALL>
                                <PlainText Path="3[1]" Text="2.16.840.1.114222.4.10.3" IgnoreCase="false"/>
                                <PlainText Path="4[1]" Text="ISO" IgnoreCase="false"/>
                                <PlainText Path="1[1]" Text="PH_SS-Ack" IgnoreCase="false"/>
                                <PlainText Path="2[1]" Text="SS Sender" IgnoreCase="false"/>
                            </FORALL>
                            <FORALL>
                                <PlainText Path="3[1]" Text="2.16.840.1.114222.4.10.3" IgnoreCase="false"/>
                                <PlainText Path="4[1]" Text="ISO" IgnoreCase="false"/>
                                <PlainText Path="1[1]" Text="PH_SS-Ack" IgnoreCase="false"/>
                                <PlainText Path="2[1]" Text="SS Receiver" IgnoreCase="false"/>
                            </FORALL>
                            <FORALL>
                                <PlainText Path="3[1]" Text="2.16.840.1.114222.4.10.3" IgnoreCase="false"/>
                                <PlainText Path="4[1]" Text="ISO" IgnoreCase="false"/>
                                <PlainText Path="1[1]" Text="PH_SS-NoAck" IgnoreCase="false"/>
                                <PlainText Path="2[1]" Text="SS Sender" IgnoreCase="false"/>
                            </FORALL>
                            <FORALL>
                                <PlainText Path="3[1]" Text="2.16.840.1.114222.4.10.3" IgnoreCase="false"/>
                                <PlainText Path="4[1]" Text="ISO" IgnoreCase="false"/>
                                <PlainText Path="1[1]" Text="PH_SS-NoAck" IgnoreCase="false"/>
                                <PlainText Path="2[1]" Text="SS Receiver" IgnoreCase="false"/>
                            </FORALL>
                            <FORALL>
                                <PlainText Path="3[1]" Text="2.16.840.1.114222.4.10.3" IgnoreCase="false"/>
                                <PlainText Path="4[1]" Text="ISO" IgnoreCase="false"/>
                                <PlainText Path="1[1]" Text="PH_SS-Batch" IgnoreCase="false"/>
                                <PlainText Path="2[1]" Text="SS Sender" IgnoreCase="false"/>
                            </FORALL>
                            <FORALL>
                                <PlainText Path="3[1]" Text="2.16.840.1.114222.4.10.3" IgnoreCase="false"/>
                                <PlainText Path="4[1]" Text="ISO" IgnoreCase="false"/>
                                <PlainText Path="1[1]" Text="PH_SS-Batch" IgnoreCase="false"/>
                                <PlainText Path="2[1]" Text="SS Receiver" IgnoreCase="false"/>
                            </FORALL>
                        </EXIST>

                    </Assertion>
                </Constraint>
            </ByName>
            <ByID ID="EVN">
                <!-- EVN.2 -->
                <Constraint ID="SS-018">
                    <Description>EVN-2 (Recorded Date/Time of Message) SHALL be expressed with a minimum precision of the nearest minute, and be represented in the following format: 'YYYYMMDDHHMM[SS[.S[S[S[S]]]]] [+/- ZZZZ]'</Description>
                    <Assertion>
                        <!-- TODO -->
                        <Format Path="7[1]" Regex="([0-9]{12}*)"/>
                    </Assertion>
                </Constraint>
                <!-- EVN.7 -->
                <Constraint ID="SS-XX">
                    <Description>PHVS_UniversalIDType_SyndromicSurveillance</Description>
                    <Assertion>
                        <ValueSet Path="7[1].3[1]" ValueSetID="PHVS_UniversalIDType_SyndromicSurveillance" BindingStrength="R" BindingLocation="1"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByName Name="PID">
                <!-- PID.1 -->
                <Constraint ID="SS-019">
                    <Description>PID-1 (Set ID - PID) SHALL be valued with the constant value '1'.</Description>
                    <Assertion>
                        <AND>
                            <Presence Path="1[1]"/>
                            <PlainText Path="1[1]" Text="1" IgnoreCase="false"/>
                        </AND>
                    </Assertion>
                </Constraint>
                <!-- PID.5 -->
                <Constraint ID="SS-023">
                    <Description>PID-5 (Patient Name) SHALL be valued as |~^^^^^^S| or |~^^^^^^U|</Description>
                    <Assertion>
                            <OR>
                                <PlainText Path="7[1]" Text="S" IgnoreCase="false"/>
                                <PlainText Path="7[1]" Text="U" IgnoreCase="false"/>
                            </OR>                            
                    </Assertion>
                </Constraint>
                <!-- PID.8 -->
                <Constraint ID="SS-PID.8.XXX">
                    <Description>gender</Description>
                    <Assertion>
                        <ValueSet Path="8[1]" ValueSetID="PHVS_Gender_SyndromicSurveillance" BindingStrength="R" BindingLocation="1"/>
                    </Assertion>
                </Constraint>
                <!-- PID.10 -->
                <Constraint ID="SS-PID.10.XXX">
                    <Description>race</Description>
                    <Assertion>
                        <ValueSet Path="10[1]" ValueSetID="PHVS_RaceCategory_CDC" BindingStrength="R" BindingLocation="1"/>
                    </Assertion>
                </Constraint>
                <!-- PID.22 -->
                <Constraint ID="SS-PID.22.XXX">
                    <Description>ethnicity</Description>
                    <Assertion>
                        <ValueSet Path="22[1]" ValueSetID="PHVS_EthnicityGroup_CDC" BindingStrength="R" BindingLocation="1"/>
                    </Assertion>
                </Constraint>
                <!-- PID.29 -->
                <Constraint ID="SS-036">
                    <Description>If valued, PID-29 (Patient Death and Time), SHALL be expressed with a minimum precision of the nearest minute and be represented in the following format:'YYYYMMDDHHMM[SS[.S[S[S[S]]]]][+/- ZZZZ]'</Description>
                    <Assertion>
                        <Format Path="29[1]" Regex="([0-9]{12}*)"/>
                    </Assertion>
                </Constraint>
            </ByName>
            <ByName Name="PV1">
                <!-- PV1.1 -->
                <Constraint ID="SS-024">
                <Description>PV1-1 (Set ID) SHALL be valued with the constant value '1'.</Description>
                <Assertion>
                    <AND>
                        <Presence Path="1[1].1[1]"/>
                        <PlainText Path="1[1].1[1]" Text="1" IgnoreCase="false"/>
                    </AND>
                </Assertion>
                </Constraint>
                <!-- PV1.19 -->
                <Constraint ID="SS-025">
                    <Description>PV1-19.5 (Identifier Type Code) SHALL be valued to the Literal Value 'VN'.</Description>
                    <Assertion>
                        <AND>
                            <Presence Path="19[1].5[1]"/>
                            <PlainText Path="19[1].5[1]" Text="VN" IgnoreCase="false"/>
                        </AND>
                    </Assertion>
                </Constraint>
                <!-- PV1.44 -->
                <Constraint ID="SS-010">
                    <Description>PV1-44 (Admit Date/Time) SHALL be expressed with a minimum precision of the nearest minute and be represented in the following format: 'YYYYMMDDHHMM[SS[.S[S[S[S]]]]] [+/-ZZZZ]'</Description>
                    <Assertion>
                        <Format Path="44[1]" Regex="([0-9]{12}*)"/>
                    </Assertion>
                </Constraint>
            </ByName>
            <ByID ID="PV1_A08">
                <!-- PV1.45 -->
                <Constraint ID="SS-012">
                    <Description>If present in the A08, PV1-45 (Discharge Date/Time) SHALL be expressed with a minimum precision of the nearest minute and be represented in the following format: 'YYYYMMDDHHMM[SS[.S[S[S[S]]]]] [+/-ZZZZ]'</Description>
                    <Assertion>
                        <IMPLY>
                            <Presence Path="45[1]"/>
                            <Format Path="45[1]" Regex="[0-9]{12}*"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByName Name="PV2">
                <!-- PV2.3 -->
                <!-- TO CHECK -->
                <Constraint ID="SS-009">
                    <Description>The implementation SHALL support all 3 value sets for PV2-3 (Admit Reason): ICD-9 CM Administrative Diagnosis Codes; ICD-10 codes; SNOMED Disease or Disorder - 64572001 Domain Codes. If there is not a code in one of the 3 value sets specified that captures the concept trying to be conveyed, then free text is allowed to be used and it is communicated in component PV2-3.2</Description>
                    <Assertion>
                        <EXIST>
                            <ValueSet Path="3[1].1[1]" ValueSetID="PHVS_AdministrativeDiagnosis_CDC_ICD-9CM" BindingStrength="R" BindingLocation="1"/>
                            <ValueSet Path="3[1].1[1]" ValueSetID="PHVS_AdministrativeDiagnosis_CDC_ICD-10CM" BindingStrength="R" BindingLocation="1"/>
                            <ValueSet Path="3[1].1[1]" ValueSetID="PHVS_Disease_CDC" BindingStrength="R" BindingLocation="1"/>
                            <Presence Path="3[1].2[1]"/>
                        </EXIST>
                    </Assertion>
                </Constraint>
                <!-- PV2.3 -->
                <Constraint ID="SS-026">
                    <Description>PV2-3.3 (Admit Reason Code System Name) SHALL be valued to one of the Literal Values in the set 'I10', 'I9CDX', 'SCT'.</Description>
                    <Assertion>
                        <StringList Path="3[1]" CSV="I10,I9CDX,SCT"/>                        
                    </Assertion>
                </Constraint>
            </ByName>
            <ByName Name="DG1">
                <!-- DG1.1 -->
                <Constraint ID="SS-032">
                    <Description>DG1-1 (Set ID) for the first occurrence of a DG1 Segment SHALL have the Literal Value of '1'. Each following occurrence SHALL be numbered consecutively</Description>
                    <Assertion>
                        <SetID Path="1[1]"/>
                    </Assertion>
                </Constraint>
                <!-- DG1.3 -->
                <Constraint ID="SS-011">
                    <Description>The implementation SHALL support all 3 value sets PHVS_AdministrativeDiagnosis_CDC_ICD-9CM or PHVS_AdministrativeDiagnosis_ICD-10CM or PHVS_Disease_CDC </Description>
                    <Assertion>
                        <EXIST>
                            <ValueSet Path="3[1].1[1]" ValueSetID="PHVS_AdministrativeDiagnosis_CDC_ICD-9CM" BindingStrength="R" BindingLocation="1"/>
                            <ValueSet Path="3[1].1[1]" ValueSetID="PHVS_AdministrativeDiagnosis_ICD-10CM" BindingStrength="R" BindingLocation="1"/>
                            <ValueSet Path="3[1].1[1]" ValueSetID="PHVS_Disease_CDC" BindingStrength="R" BindingLocation="1"/>
                        </EXIST>
                    </Assertion>
                </Constraint>
                <!-- DG1.3 -->
                <Constraint ID="SS-033">
                    <Description>DG1-3.3 (Name of Coding System) SHALL be valued to one of the Literal Values in the set 'I10', 'I9CDX', 'SCT'.</Description>
                    <Assertion>
                        <StringList Path="3[1]" CSV="I10,I9CDX,SCT"/>                        
                    </Assertion>
                </Constraint>
                <Constraint ID="SS-040">
                    <Description>DG1-6 Diagnosis Type SHALL be either A, F or W ( Admitting, Final or Working)</Description>
                    <Assertion>
                        <StringList Path="6[1]" CSV="A,F,W"/>
                    </Assertion>
                </Constraint>
            </ByName>
            <ByID ID="PR1">
                <!-- PR1.1 -->
                <Constraint ID="SS-034">
                    <Description>For the first occurrence of the segment the sequence number shall be 1, for the second occurrence it shall be 2, etc.</Description>
                    <Assertion>
                        <SetID Path="1[1]"/>
                    </Assertion>
                </Constraint>
            </ByID>
            <ByID ID="OBX">
                <!-- OBX.1 -->
                <Constraint ID="SS-027">
                    <Description>For the first repeat of the OBX segment, the sequence number SHALL be one (1), for the second repeat, the sequence number shall be two (2), etc.</Description>
                    <Assertion>
                        <SetID Path="1[1]"/>
                    </Assertion>
                </Constraint>
                <!-- OBX.2 -->
                <Constraint ID="SS-028">
                    <Description>OBX-2 SHALL be valued to the Literal Value in the set ('TS', 'TX', 'NM', 'CWE', 'XAD') from the value set PHVS_ValueType_SyndromicSurveillance</Description>
                    <Assertion>
                        <StringList Path="2[1]" CSV="TS,TX,NM,CWE,XAD"/>
                    </Assertion>
                </Constraint>
                <!-- OBX.6 -->
                <Constraint ID="SS-029">
                    <Description>If OBX 3.1 (Observation Identifier) is valued with 21612-7 AGE-REPORTED (LOINC), then OBX-6.1 (Unit Identifier) SHALL be valued to a member of the set: PHVS_AgeUnit_SyndromicSurveillance</Description>
                    <Assertion>
                        <IMPLY>
                            <PlainText Path="3[1].1[1]" Text="21612-7" IgnoreCase="false"/>
                            <ValueSet Path="6[1].1[1]" ValueSetID="PHVS_AgeUnit_SyndromicSurveillance" BindingStrength="R" BindingLocation="1"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="SS-030">
                    <Description>If OBX 3.1 (Observation Identifier) is valued with 11289-6 BODY TEMPERATURE, INITIAL (LOINC), then OBX-6.1 (Unit Identifier) SHALL be valued to a member of the set: PHVS_TemperatureUnit_UCUM</Description>
                    <Assertion>
                        <IMPLY>
                            <PlainText Path="3[1].1[1]" Text="11289-6" IgnoreCase="false"/>
                            <ValueSet Path="6[1].1[1]" ValueSetID="PHVS_TemperatureUnit_UCUM" BindingStrength="R" BindingLocation="1"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                <Constraint ID="SS-031">
                    <Description>If OBX 3.1 (Observation Identifier) is valued with 59408-5 OXYGEN SATURATION IN ARTERIAL BLOOD BY PULSE OXIMETRY (LOINC),, then OBX-6.1 (Unit Identifier) SHALL be valued to a member of the set: PHVS_TemperatureUnit_UCUM. OBX-6.3 will contain the code system code 'UCUM' for any unit values given.</Description>
                    <Assertion>
                        <IMPLY>
                            <PlainText Path="3[1].1[1]" Text="59408-5" IgnoreCase="false"/>
                            <AND>
                            <ValueSet Path="6[1].1[1]" ValueSetID="PHVS_PulseOximetryUnit_UCUM" BindingStrength="R" BindingLocation="1"/>
                                <PlainText Path="6[1].3[1]" Text="UCUM" IgnoreCase="false"/>
                            </AND>
                        </IMPLY>
                    </Assertion>
                </Constraint>
            </ByID>
        </Segment>
        <Group>
            <!-- ADT_A01.1 -->
            <ByID ID="0d741773-619a-4ec1-b6c2-2589faa75b92">
                <Constraint ID="SS-014">
                    <Description>MSH-9 (Message Type) SHALL be the literal value: 'ADT^A01^ADT_A01' for Admission Messages</Description>
                    <Assertion>
                        <FORALL>
                            <!-- First check that all values are present because PlainText returns true when something is not present -->
                            <Presence Path="1[1].9[1].1[1]"/>
                            <Presence Path="1[1].9[1].2[1]"/>
                            <Presence Path="1[1].9[1].3[1]"/>
                            <!--  now check the values -->
                            <PlainText Path="1[1].9[1].1[1]" Text="ADT" IgnoreCase="false"/>
                            <PlainText Path="1[1].9[1].2[1]" Text="A01" IgnoreCase="false"/>
                            <PlainText Path="1[1].9[1].3[1]" Text="ADT_A01" IgnoreCase="false"/>                            
                        </FORALL>
                    </Assertion>
                </Constraint>
                <Constraint ID="SS-037">
                    <Description>If PV1-36 (Discharge Disposition) is valued with any of the following: '20', '40', '41','42' then PID-30 (Patient Indicator) SHALL be valued to the litteral value 'Y'</Description>
                    <Assertion>
                        <IMPLY>
                            <StringList Path="8[1].36[1]" CSV="20,40,41,42"/>
                            <PlainText Path="4[1].30[1]" Text="Y" IgnoreCase="false"/>
                        </IMPLY>
                    </Assertion>
                </Constraint>
                
            </ByID>
            <!-- ADT_A03.1 -->
            <ByID ID="52f1dab8-d538-4c7e-b71b-39619b94c3bf">
                <Constraint ID="SS-038">
                    <Description>MSH-9 (Message Type) SHALL be the literal value: 'ADT^A03^ADT_A03' for Discharge Messages</Description>
                    <Assertion>
                        <FORALL>
                            <!-- First check that all values are present because PlainText returns true when something is not present -->
                            <Presence Path="1[1].9[1].1[1]"/>
                            <Presence Path="1[1].9[1].2[1]"/>
                            <Presence Path="1[1].9[1].3[1]"/>
                            <!--  now check the values -->
                            <PlainText Path="1[1].9[1].1[1]" Text="ADT" IgnoreCase="false"/>
                            <PlainText Path="1[1].9[1].2[1]" Text="A03" IgnoreCase="false"/>
                            <PlainText Path="1[1].9[1].3[1]" Text="ADT_A03" IgnoreCase="false"/>                            
                        </FORALL>
                    </Assertion>
                </Constraint>
            </ByID>
            <!-- ADT_A04.1 -->
            <ByID ID="0d741773-619a-4ec1-b6c2-2589faa75b93">
                <Constraint ID="SS-004">
                    <Description>MSH-9 (Message Type) SHALL be the literal value: 'ADT^A04^ADT_A01' for Registration Messages</Description>
                    <Assertion>
                        <FORALL>
                            <!-- First check that all values are present because PlainText returns true when something is not present -->
                            <Presence Path="1[1].9[1].1[1]"/>
                            <Presence Path="1[1].9[1].2[1]"/>
                            <Presence Path="1[1].9[1].3[1]"/>
                            <!--  now check the values -->
                            <PlainText Path="1[1].9[1].1[1]" Text="ADT" IgnoreCase="false"/>
                            <PlainText Path="1[1].9[1].2[1]" Text="A04" IgnoreCase="false"/>
                            <PlainText Path="1[1].9[1].3[1]" Text="ADT_A01" IgnoreCase="false"/>                            
                        </FORALL>
                    </Assertion>
                </Constraint>
            </ByID>
            <!-- ADT_A08.1 -->
            <ByID ID="0d741773-619a-4ec1-b6c2-2589faa75b94">
                <Constraint ID="SS-035">
                    <Description>MSH-9 (Message Type) SHALL be the literal value: 'ADT^A08^ADT_A01' for Update Messages</Description>
                    <Assertion>
                        <FORALL>
                            <!-- First check that all values are present because PlainText returns true when something is not present -->
                            <Presence Path="1[1].9[1].1[1]"/>
                            <Presence Path="1[1].9[1].2[1]"/>
                            <Presence Path="1[1].9[1].3[1]"/>
                            <!--  now check the values -->
                            <PlainText Path="1[1].9[1].1[1]" Text="ADT" IgnoreCase="false"/>
                            <PlainText Path="1[1].9[1].2[1]" Text="A08" IgnoreCase="false"/>
                            <PlainText Path="1[1].9[1].3[1]" Text="ADT_A01" IgnoreCase="false"/>                            
                        </FORALL>
                    </Assertion>
                </Constraint>
            </ByID>            
        </Group>
    </Constraints>
</ConformanceContext>
